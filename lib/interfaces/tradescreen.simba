(*
Trade Screen
============

The tradescreen file holds functions and procedures that are used to interact with the runescape Trade interface.

The source for this file can be found `here <https://github.com/SRL/SRL-6/blob/master/lib/interfaces/tradescreen.simba>`_.

*)
{$f-}
(*
Consts, Types, Vars
~~~~~~~~~~~~~~~~~~~

The following constants, types and variables are used throughout the TradeScreen methods.


**type TRSTradeScreen**

.. code-block:: pascal

    type
      TRSTradeScreen = type TRSInterface;

A type that stores the Trade Screen interface properties.
*)
const
  CENTER_COLOR = 1513250;
  BANK_BUTTON_ACCEPT = 0;
  BANK_BUTTON_DECLINE = 1;
  BANK_BUTTON_ITEMS = 2;
  BANK_BUTTON_COINS = 3;

type
  TRSTradeScreen= type TRSInterface;

(*
**var tradeScreen**

.. code-block:: pascal

    var
      tradeScreen: TRStradeScreen;

A variable through which scripters can access the TRStradeScreen type methods.

*)
var
  tradeScreen: TRStradeScreen;

(*
TRStradeScreen methods
~~~~~~~~~~~~~~~~~~~~~

The following methods should be called through the **tradeScreen** variable.

Example:

.. code-block:: pascal

    if tradeScreen.isOpen() then
      writeln('tradeScreen screen is open!');
*)

{*
__init
------

.. code-block:: pascal

    procedure TRStradeScreen.__init();

Initializes the TRStradeScreen.

.. note::

    - by Thomas
    - Last Updated: 22 September 2015 by Thomas

Example:

.. code-block:: pascal

    tradeScreen.__init();

*}
{$IFNDEF CODEINSIGHT}
procedure TRSTradeScreen.__init();
begin
  with (self) do
  begin
    name := 'Trade Screen';
    ID := ID_INTERFACE_tradeScreen;
    parentID := -1;
    static := false;
  end;
end;
{$ENDIF}

{*
__find
------

.. code-block:: pascal

    function TRStradeScreen.__find(method: string): boolean;

Internale function that returns true if the Trade Screen is detected and its bounds are set.

.. note::

    - by Thomas
    - Last Updated: 22 September 2015 by Thomas

Example:

.. code-block:: pascal

    if tradeScreen.__find() then
      writeln('The Trade Screen is open, and the bounds are set!');
*}
{$IFNDEF CODEINSIGHT}
function TRSTradeScreen.__find(): boolean;
var
  box: TBox;
  i: Integer;
  TPA: TPointArray;
  ATPA: T2DPointArray;
begin
  findColors(TPA, CENTER_COLOR, mainScreen.getBounds())

  if length(TPA) < 2000 then
  begin
    print('TRSTradeScreen.__find(): Didn' 't find enough color, Trade Screen isn' 't open.', TDebug.WARNING);
    exit();
  end;

  ATPA := TPA.cluster(1);
  ATPA.filterBetween(0, 2000);

  if length(ATPA) then
  begin
    ATPA.sortBySize(true);
    for i := 0 to high(ATPA) do
      if box.getHeight() = 41 and box.getWidth() = 110 then
        begin
          box := ATPA[0].getBounds();
          box.edit(-198, -44, 198, 240);

          self.setBounds(box);
          exit(true);
        end;
  end;
end;

{$ENDIF}

(*
isOpen
------

.. code-block:: pascal

    function TRStradeScreen.isOpen(waitTime: integer = 0): boolean;

Returns true if the tradeScreen is open. The optional **waitTime** parameter
*(default = 0)* is the maximum time (in milliseconds) it will keep looking.

.. note::

    - by Thomas
    - Last Updated: 22 September 2015 by Thomas


Example:

.. code-block:: pascal

    if tradeScreen.isOpen() then
      writeln('It''s open!');

*)
function TRSTradeScreen.isOpen(waitTime: integer = 0): boolean;
var
  t: TCountDown;
begin
  t.setTime(waitTime);

  repeat
    if self.__find() then
    begin
      result := true;
      break();
    end;
    wait(randomRange(20, 50));
  until t.isFinished();

  print('TRSTradeScreen.isOpen(): Result = ' + boolToStr(result));
end;

(*
clickButton
-----------

.. code-block:: pascal

    procedure TRSTradeScreen.clickButton(button: integer);

Will click the trade button **button**. Valid button constants are
located at the top of this page.

.. note::

    - by Thomas
    - Last Updated: 8 December 2015 by Thomas


Example:

.. code-block:: pascal

    tradeScreen.clickButton(BANK_BUTTON_ACCEPT);

*)

procedure TRSTradeScreen.clickButton(button: integer);
var
  box: tbox;
begin
  if (not self.__find()) then
    exit();

  box := self.getBounds();

  case button of
    BANK_BUTTON_ACCEPT: box.edit(215, 105, -215, -186);
    BANK_BUTTON_DECLINE: box.edit(215, 143, -215, -154);
    BANK_BUTTON_ITEMS: box.edit(110, 265, -365, -34);
    BANK_BUTTON_COINS: box.edit(143, 265, -332, -34);
  end;

  mouseBox(box, MOUSE_LEFT);
end;

(*
addCoins
--------

.. code-block:: pascal

    procedure TRSTradeScreen.addCoins(amount: integer);

Will add a certain **amount** of coins using the BANK_BUTTON_COINS.

.. note::

    - by Thomas
    - Last Updated: 8 December 2015 by Thomas


Example:

.. code-block:: pascal

    tradeScreen.addCoins(1000);

*)

procedure TRSTradeScreen.addCoins(amount: integer);
begin
  if (not self.__find()) then
    exit();

  self.clickButton(BANK_BUTTON_COINS);

  if waitColorCountRange(9086905, 64, chatBox.getBounds(), randomRange(3000, 5000), 1000) then
      typeSend(intToStr(amount), true);
end;

(*
countItems
----------

.. code-block:: pascal

    function TRSTradeScreen.countItems(itemDTM: integer; yours: boolean = true): integer;

Will count the **itemDTM** in both sides of the tradeScreen.
If **yours** is set to true *(default = true)* it will check your side,
else it will count the DTM on their part.

.. note::

    - by Thomas
    - Last Updated: 8 December 2015 by Thomas


Example:

.. code-block:: pascal

    writeLn(tradeScreen.countItems(foodDTM, true));

*)

function TRSTradeScreen.countItems(itemDTM: integer; yours: boolean = true): integer;
var
  box: tbox;
begin
  if (not self.__find()) then
    exit();

  box := self.getBounds();

  if yours then
    box.edit(5, 34, -319, -64)
  else
    box.edit(319, 34, -5, -64);

  exit(countDTMs(itemDTM, box));
end;

(*
waitItemCount
----------

.. code-block:: pascal

    function TRSTradeScreen.waitItemCount(itemDTM, waitTime, count: integer; yours: boolean = true): boolean;

Will count the **itemDTM** in either side of the tradeScreen untill a
certain **count** is reached, or untill the **waitTime** has passed.
If **yours** is set to true *(default = true)* it will check your side,
else it will count the DTM on their part.

.. note::

    - by Thomas
    - Last Updated: 8 December 2015 by Thomas


Example:

.. code-block:: pascal

    if (not tradeScreen.waitItemCount(foodDTM, randomRange(2000, 3000), 28, true)) then
      tradeScreen.clickButton(BANK_BUTTON_ITEMS);

*)

function TRSTradeScreen.waitItemCount(itemDTM, waitTime, count: integer; yours: boolean = true): boolean;
var
  timer: TCountDown;
begin
  timer.setTime(waitTime);
  while (not timer.isFinished()) and self.__find() do
    if (self.countItems(itemDTM, yours) = count) then
      exit(true);
end;

begin
  tradeScreen.__init();
end;

{$f+}
