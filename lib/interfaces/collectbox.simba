(*
CollectBox
==========

The CollectBox file holds functions and procedures that are used in the
Runescape collection box screen.

The source for this file can be found `here <https://github.com/SRL/SRL-6/blob/master/lib/interfaces/collectbox.simba>`_.

*)

{$f-}

(*
const Collect Buttons
~~~~~~~~~~~~~~~~~~~~~

Integer constants that represent the order of the collect buttons.

    * COLLECT_BUTTON_BANK
    * COLLECT_BUTTON_INV

*)
const
  COLLECT_BUTTON_BANK = 0;
  COLLECT_BUTTON_INV = 1;

(*
type TRSCollectBox
~~~~~~~~~~~~~~~~~~

A type that stores the collection box interface properties.
*)
type
  TRSCollectBox = type TRSInterface;

(*
var collectbox
~~~~~~~~~~~~~~

The variable used to call collect box functions, procedures and attributes.
*)
var
  collectbox: TRSCollectBox;

{*
.__init
~~~~~~~

.. code-block:: pascal

    procedure TRSCollectBox.__init;

Initializes the TRSCollectBox.

.. note::

    - by Ashaman88
    - Last Updated: 15 March 2014 by Ashaman88

Example:

.. code-block:: pascal

    collectbox.__init();
*}
{$IFNDEF CODEINSIGHT}
procedure TRSCollectBox.__init();
begin
  with (self) do
  begin
    name := 'Collect Box';
    ID := ID_INTERFACE_COLLECTBOX;
    parentID := -1;
    static := false;
  end;
end;
{$ENDIF}

(*
.__find
~~~~~~~

.. code-block:: pascal

    function TRSCollectBox.__find(): boolean;

Returns true if the collectbox is detected, and sets the bounds

.. note::

    - by The Mayor
    - Last Updated: 17 March 2015 by The Mayor

Example:

.. code-block:: pascal

    if collectbox.__find() then
      writeln('bounds are set!');
*)
{$IFNDEF CODEINSIGHT}
function TRSCollectBox.__find(): boolean;
const
  BURGUNDY_COLOR = [1448256, 26]; // [Col, Tol] background of "COLLECTION BOX"
var
  i: Integer;
  TPA: TPointArray;
  ATPA: T2DPointArray;
  b: TBox;
begin
  findColorsTolerance(TPA, BURGUNDY_COLOR[0], mainScreen.getBounds(), BURGUNDY_COLOR[1]);

  if length(TPA) < 20 then
  begin
    print('TRSCollectBox.__find(): Didn''t find enough BURGUNDY_COLOR', TDebug.WARNING);
    exit(false);
  end;

  ATPA := TPA.cluster(5);
  ATPA.sortBySize(true);

  for i := 0 to high(ATPA) do
  begin
    b := ATPA[i].getBounds();
    if (b.getWidth() < 140) or (b.getHeight() > 30) then continue();

    if (pos('COLLECTION BOX', upperCase(tesseract_GetText(b, TESS_FILTER_SMALL_CHARS))) > 0) then
    begin
      b.edit(-2, -2, 198, 268);
      self.setBounds(b);
      exit(true);
    end;
  end;
end;
{$ENDIF}

(*
.isOpen
~~~~~~~

.. code-block:: pascal

    function TRSCollectBox.isOpen(waitTime: integer = 0): boolean;

Returns true if the collectbox screen is open. Includes an optional parameter
'waitTime' (default 0) which will search for the collectbox screen until
'waitTime' is reached.

.. note::

    - by Ashaman88
    - Last Updated: 15 March 2014 by Ashaman88

Example:

.. code-block:: pascal

    if collectbox.isOpen() then
      writeln('The collectbox screen is open!');
*)
function TRSCollectBox.isOpen(waitTime: integer = 0): boolean;
var
  t: LongWord;
begin
  t := (getSystemTime() + waitTime);

  repeat
    result := self.__find();
    wait(20 + random(20));
  until (getSystemTime() >= t) or (result);
end;

(*
.close
~~~~~~

.. code-block:: pascal

    function TRSCollectBox.close(escape: boolean = true): boolean;

Closes the collectbox and returns if succesful. Option to close via clicking
or pressing the ESC key (default).

.. note::

    - by Ashaman88
    - Last Updated: 15 March 2014 by Ashaman88

Example:

.. code-block:: pascal

    if collectbox.close() then
      writeln('closed the collectbox');
*)
function TRSCollectBox.close(escape: boolean = true): boolean;
var
  timeOut: LongWord;
begin
  result := false;

  if (not self.isOpen()) then
    exit(true);

  // try ESC key first
  if escape then
  begin
    timeOut := (getSystemTime() + randomRange(600, 900));
    repeat
      multiType(VK_ESCAPE, randomRange(30, 50), 2);
      wait(100 + random(50));
      result := (not self.isOpen());
    until((getSystemTime() > timeOut) or result);

    if (result) then
      exit();
  end;

  // click the X as a failsafe
  mouseBox(intToBox(self.x1 + 346, self.y1 + 6, self.x2 - 3, self.y1 + 13), MOUSE_MOVE);

  // this is a failsafe in case the bankscreen closes (from the ESC key) while moving the mouse
  if (self.isOpen()) then
  begin
    fastClick(MOUSE_LEFT);
    wait(50 + random(50));
  end else
    exit(true);

  // wait for the bankscreen to close
  timeOut := (getSystemTime() + randomRange(5000, 6000));
  while (timeOut > getSystemTime()) do
  begin
    if (not self.isOpen()) then
    begin
      result := true;
      break;
    end;

    wait(50 + random(50));
  end;

  print('collectbox.close(): result = '+boolToStr(result), TDebug.SUB);
end;

(*
.collectButton
~~~~~~~~~~~~~~

.. code-block:: pascal

    function TRSCollectBox.collectButton(button: integer): boolean;

Selects one of the two collect buttons, either to collect to bank or
inventory.

.. note::

    - by Ashaman88
    - Last Updated: 17 March 2015 by The Mayor

Example:

.. code-block:: pascal

    if collectbox.collectButton(COLLECT_BUTTON_BANK) then
      writeln('collected to the bank');
*)
function TRSCollectBox.collectButton(button: integer): boolean;
var
  TBA: TBoxArray;
begin
  if (not self.isOpen()) then
    exit(false);

  TBA := grid(1, 2, 200, 17, 0, 37, point(self.x1 + 236, self.y1 + 231));
  mouseBox(TBA[button], MOUSE_LEFT);

  result := true;
end;

begin
  collectbox.__init();
end;
